# Generated by Django 3.1.7 on 2021-04-12 22:17

import datetime
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnaliseEPI',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificacao_epi', models.CharField(max_length=200, null=True)),
                ('descricao_epi', models.CharField(max_length=1500, null=True)),
                ('epi_eficaz', models.BooleanField(default=False)),
                ('hierarquia_medida_protecao_coletiva', models.BooleanField(default=False)),
                ('observada_condicao_funcionamento', models.BooleanField(default=False)),
                ('observado_epi', models.BooleanField(default=False)),
                ('observado_prazo_validade_ca', models.BooleanField(default=False)),
                ('observado_periodicidade_troca', models.BooleanField(default=False)),
                ('observada_higienizacao_epi', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Análise de EPI',
                'verbose_name_plural': 'Análises de EPI',
            },
        ),
        migrations.CreateModel(
            name='Atividade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=20)),
                ('descricao', models.CharField(max_length=2000)),
                ('categoria', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Atividade',
                'verbose_name_plural': 'Atividades',
            },
        ),
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=20)),
                ('cnpj', models.CharField(max_length=15)),
                ('razao_social', models.CharField(max_length=150)),
                ('nome_fantasia', models.CharField(max_length=150)),
                ('inscricao_estadual', models.CharField(max_length=30)),
                ('inscricao_municipal', models.CharField(max_length=30)),
                ('endereco', models.CharField(max_length=250)),
                ('cidade', models.CharField(max_length=80)),
                ('numero', models.CharField(max_length=20)),
                ('complemento', models.CharField(max_length=150, null=True)),
                ('cep', models.CharField(max_length=20)),
                ('cnae', models.CharField(max_length=20)),
            ],
            options={
                'verbose_name': 'Empresa',
                'verbose_name_plural': 'Empresas',
            },
        ),
        migrations.CreateModel(
            name='Equipamento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=50)),
                ('descricao', models.CharField(max_length=150)),
                ('tipo', models.IntegerField(choices=[(0, 0), (1, 1)])),
                ('hierarquia_protecao_coletiva', models.CharField(max_length=150)),
                ('prazo_validade', models.DateTimeField()),
                ('certificado_aprovacao', models.CharField(max_length=100)),
                ('url_foto', models.CharField(max_length=1000)),
                ('comentario', models.CharField(max_length=500, null=True)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='seguranca_trabalho.empresa')),
            ],
        ),
        migrations.CreateModel(
            name='FatorAcidente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=10)),
                ('descricao', models.CharField(max_length=500, null=True)),
            ],
            options={
                'verbose_name': 'Fator acidente',
                'verbose_name_plural': 'Fatores acidente',
            },
        ),
        migrations.CreateModel(
            name='FatorRisco',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=20)),
                ('descricao', models.CharField(max_length=2000)),
                ('categoria', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Fator de risco',
                'verbose_name_plural': 'Fatores de risco',
            },
        ),
        migrations.CreateModel(
            name='Funcionario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_erp', models.CharField(max_length=100)),
                ('codigo_esocial', models.CharField(max_length=100)),
                ('nome', models.CharField(max_length=100)),
                ('genero', models.IntegerField(choices=[(0, 0), (1, 1)])),
                ('cbo', models.CharField(max_length=50, null=True)),
                ('cpf', models.CharField(max_length=13)),
                ('rg', models.CharField(max_length=15)),
                ('nis', models.CharField(max_length=20, null=True)),
                ('pis', models.CharField(max_length=20, null=True)),
                ('pasep', models.CharField(max_length=20, null=True)),
                ('nit', models.CharField(max_length=20, null=True)),
                ('data_nascimento', models.DateField()),
                ('estagiario', models.BooleanField(default=False)),
                ('data_exame_admissional', models.DateTimeField()),
                ('data_exame_demissional', models.DateTimeField(null=True)),
                ('setor', models.CharField(max_length=50)),
                ('cargo', models.CharField(max_length=50)),
                ('funcao', models.CharField(max_length=50)),
                ('url_imagem', models.CharField(max_length=1000)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='seguranca_trabalho.empresa')),
            ],
            options={
                'verbose_name': 'Funcionário',
                'verbose_name_plural': 'Funcionários',
            },
        ),
        migrations.CreateModel(
            name='MedicoASO',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpf', models.CharField(max_length=13)),
                ('nit', models.CharField(max_length=30)),
                ('nome', models.CharField(max_length=150)),
                ('numero_inscricao', models.CharField(max_length=20)),
                ('uf', models.CharField(max_length=10)),
            ],
            options={
                'verbose_name': 'Médico ASO',
                'verbose_name_plural': 'Médicos ASO',
            },
        ),
        migrations.CreateModel(
            name='NaturezaLesao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=15, null=True)),
                ('descricao', models.CharField(max_length=750, null=True)),
            ],
            options={
                'verbose_name': 'Natureza lesão',
                'verbose_name_plural': 'Naturezas lesões',
            },
        ),
        migrations.CreateModel(
            name='ParteCorpoAtingida',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=15, null=True)),
                ('descricao', models.CharField(max_length=500, null=True)),
            ],
            options={
                'verbose_name': 'Parte corpo atingida',
                'verbose_name_plural': 'Partes corpo atingida',
            },
        ),
        migrations.CreateModel(
            name='Procedimento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=30)),
                ('nome', models.CharField(max_length=250)),
            ],
            options={
                'verbose_name': 'Procedimento',
                'verbose_name_plural': 'Procedimentos',
            },
        ),
        migrations.CreateModel(
            name='ResponsavelRegistroAmbiental',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpf', models.CharField(max_length=13)),
                ('nis', models.CharField(max_length=20, null=True)),
                ('nome', models.CharField(max_length=150)),
                ('orgao_classe', models.IntegerField(choices=[(1, 1), (2, 2), (9, 9)])),
                ('sigla_orgao', models.CharField(max_length=20, null=True)),
                ('numero_inscricao', models.CharField(max_length=30)),
                ('uf', models.CharField(max_length=20)),
            ],
            options={
                'verbose_name': 'Responsável pelo registro ambiental',
                'verbose_name_plural': 'Responsáveis pelo registro ambiental',
            },
        ),
        migrations.CreateModel(
            name='TipoAcidente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=10)),
                ('descricao', models.CharField(max_length=500, null=True)),
            ],
            options={
                'verbose_name': 'Tipo de acidente',
                'verbose_name_plural': 'Tipos de acidentes',
            },
        ),
        migrations.CreateModel(
            name='UnidadeMedida',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=20)),
                ('descricao', models.CharField(max_length=2000)),
            ],
            options={
                'verbose_name': 'Unidade de medida',
                'verbose_name_plural': 'Unidades de medida',
            },
        ),
        migrations.CreateModel(
            name='MonitoramentoSaudeTrabalhador',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('empresa_id', models.IntegerField(null=True)),
                ('funcionario_id', models.IntegerField(null=True)),
                ('estagiario', models.BooleanField(default=False)),
                ('tipo_exame', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (9, 9)])),
                ('data_aso', models.DateTimeField()),
                ('resultado_aso', models.IntegerField(choices=[(1, 1), (2, 2)])),
                ('data_exame', models.DateTimeField()),
                ('observacao_procedimento', models.CharField(max_length=1000, null=True)),
                ('ordem_exame', models.IntegerField(choices=[(1, 1), (2, 2)])),
                ('indicacao_resultado', models.IntegerField()),
                ('coordenador_cpf', models.CharField(max_length=13)),
                ('coordenador_crm', models.CharField(max_length=20)),
                ('coordenador_uf', models.CharField(max_length=20)),
                ('coordenador_nome', models.CharField(max_length=150)),
                ('medicos', models.ManyToManyField(to='seguranca_trabalho.MedicoASO')),
                ('procedimento', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='seguranca_trabalho.procedimento')),
            ],
            options={
                'verbose_name': 'Monitoramento de saúde do trabalhador',
                'verbose_name_plural': 'Monitoramento de saúde do trabalhador',
            },
        ),
        migrations.CreateModel(
            name='FuncionarioEquipamento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.IntegerField()),
                ('data_entrega', models.DateTimeField()),
                ('devolucao', models.BooleanField(default=False)),
                ('data_devolucao', models.DateTimeField(default=datetime.datetime.utcnow)),
                ('data_vencimento', models.DateTimeField(default=datetime.datetime.utcnow)),
                ('comentario', models.CharField(max_length=500, null=True)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='seguranca_trabalho.empresa')),
                ('equipamento', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='seguranca_trabalho.equipamento')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='seguranca_trabalho.funcionario')),
            ],
        ),
        migrations.CreateModel(
            name='CondicaoFatorRisco',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_inicio', models.DateTimeField()),
                ('descricao_atividade_ambiente', models.CharField(max_length=1000, null=True)),
                ('tipo_avaliacao', models.IntegerField(choices=[(1, 1), (2, 2)])),
                ('intensidade', models.IntegerField()),
                ('limite_tolerancia', models.IntegerField(null=True)),
                ('tecnica_utilizada', models.CharField(max_length=1000)),
                ('insalubridade', models.BooleanField(default=False)),
                ('periculosidade', models.BooleanField(default=False)),
                ('aposentadoria_especial', models.BooleanField(default=False)),
                ('utilizacao_epc', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2)])),
                ('epc_eficaz', models.BooleanField(default=False)),
                ('utilizacao_epi', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2)])),
                ('metodologia_riscos_ergonomicos', models.CharField(max_length=1000, null=True)),
                ('observacao', models.CharField(max_length=1000)),
                ('analises_epi', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='condicao_fator_risco', to='seguranca_trabalho.analiseepi')),
                ('atividades', models.ManyToManyField(to='seguranca_trabalho.Atividade')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='seguranca_trabalho.empresa')),
                ('fator_risco', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='seguranca_trabalho.fatorrisco')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='seguranca_trabalho.funcionario')),
                ('responsaveis_registro_ambiental', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='condicao_fator_risco', to='seguranca_trabalho.responsavelregistroambiental')),
                ('unidade_medida', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='seguranca_trabalho.unidademedida')),
            ],
            options={
                'verbose_name': 'Condição de fator risco',
                'verbose_name_plural': 'Condições de fator risco',
            },
        ),
        migrations.CreateModel(
            name='ComunicacaoAcidenteTrabalho',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('funcionario_id', models.IntegerField(null=True)),
                ('empresa_id', models.IntegerField()),
                ('acidente_data_hora', models.DateTimeField()),
                ('tipo_cat', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3)], null=True)),
                ('acidente_horas_trabalhadas', models.TimeField()),
                ('acidente_obito', models.BooleanField(default=False)),
                ('acidente_data_obito', models.DateTimeField(null=True)),
                ('acidente_notificacao_policial', models.BooleanField(default=False)),
                ('acidente_aviso_comunicacao', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3)])),
                ('observacao', models.CharField(max_length=1000, null=True)),
                ('tipo_localizacao_acidente', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (9, 9)])),
                ('localizacao_acidente_especificacao', models.CharField(max_length=1000)),
                ('acidente_tipo_endereco', models.CharField(max_length=30)),
                ('acidente_endereco_descricao', models.CharField(max_length=1000)),
                ('acidente_endereco_numero', models.IntegerField()),
                ('acidente_endereco_complemento', models.CharField(max_length=500)),
                ('acidente_endereco_bairro', models.CharField(max_length=500)),
                ('acidente_endereco_cep', models.CharField(max_length=100)),
                ('acidente_endereco_cidade', models.CharField(max_length=200)),
                ('acidente_endereco_estado', models.CharField(max_length=200)),
                ('acidente_endereco_pais', models.CharField(max_length=100)),
                ('acidente_endereco_codigo_postal', models.CharField(max_length=100)),
                ('tipo_inscricao', models.IntegerField(choices=[(1, 1), (2, 2), (4, 4)])),
                ('inscricao_numero', models.CharField(max_length=100)),
                ('lado_parte_corpo_atingida', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3)])),
                ('atestado_medico_codigo', models.CharField(max_length=100)),
                ('atestado_medico_data', models.DateTimeField()),
                ('hospital', models.BooleanField(default=False)),
                ('tempo_hospital', models.IntegerField(null=True)),
                ('afastamento_medico', models.BooleanField(default=False)),
                ('lesao_complemento_descricao', models.CharField(max_length=2000)),
                ('diagnostico', models.CharField(max_length=2000)),
                ('cid_codigo', models.CharField(max_length=50)),
                ('atestado_medico_observacao', models.CharField(max_length=2000, null=True)),
                ('nome_medico', models.CharField(max_length=150)),
                ('natureza_lesao_classificao', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3)])),
                ('classificao_codigo_medico', models.CharField(max_length=150)),
                ('uf_medico', models.CharField(max_length=100)),
                ('codigo_cat', models.CharField(max_length=100, null=True)),
                ('e_social_notificado', models.BooleanField(default=False)),
                ('fator_acidente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='seguranca_trabalho.fatoracidente')),
                ('natureza_lesao', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='seguranca_trabalho.naturezalesao')),
                ('parte_corpo_atingida', models.ManyToManyField(to='seguranca_trabalho.ParteCorpoAtingida')),
                ('tipo_acidente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='seguranca_trabalho.tipoacidente')),
            ],
            options={
                'verbose_name': 'Comunicação de acidente do trabalho',
                'verbose_name_plural': 'Comunicações de acidente do trabalho',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('nome_completo', models.CharField(max_length=150, null=True, verbose_name='Nome completo')),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('empresas', models.ManyToManyField(blank=True, related_name='empresa_set', related_query_name='empresas', to='seguranca_trabalho.Empresa', verbose_name='Empresas')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
            },
        ),
    ]
