# Generated by Django 3.1.7 on 2021-05-29 00:48

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AgenteCausadorAcidenteTrabalho',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=15, null=True)),
                ('descricao', models.CharField(max_length=1000, null=True)),
            ],
            options={
                'verbose_name': 'Agente causador do acidente de trabalho',
                'verbose_name_plural': 'Agentes causadores do acidente de trabalho',
            },
        ),
        migrations.CreateModel(
            name='AnaliseEPI',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificacao_epi', models.CharField(max_length=200, null=True)),
                ('descricao_epi', models.CharField(max_length=1500, null=True)),
                ('epi_eficaz', models.BooleanField(default=False)),
                ('hierarquia_medida_protecao_coletiva', models.BooleanField(default=False)),
                ('observada_condicao_funcionamento', models.BooleanField(default=False)),
                ('observado_epi', models.BooleanField(default=False)),
                ('observado_prazo_validade_ca', models.BooleanField(default=False)),
                ('observado_periodicidade_troca', models.BooleanField(default=False)),
                ('observada_higienizacao_epi', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Análise de EPI',
                'verbose_name_plural': 'Análises de EPI',
            },
        ),
        migrations.CreateModel(
            name='Atividade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=20)),
                ('descricao', models.CharField(max_length=2000)),
                ('categoria', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Atividade',
                'verbose_name_plural': 'Atividades',
            },
        ),
        migrations.CreateModel(
            name='ClassificacaoBrasileiraOcupacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=100, verbose_name='Código')),
                ('descricao', models.CharField(max_length=300, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Classificação brasileira de ocupação',
                'verbose_name_plural': 'Classificações brasileira de ocupação',
            },
        ),
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=20)),
                ('cnpj', models.CharField(max_length=15)),
                ('razao_social', models.CharField(max_length=150)),
                ('nome_fantasia', models.CharField(max_length=150)),
                ('inscricao_estadual', models.CharField(max_length=30)),
                ('inscricao_municipal', models.CharField(max_length=30)),
                ('endereco', models.CharField(max_length=250)),
                ('cidade', models.CharField(max_length=80)),
                ('numero', models.CharField(max_length=20)),
                ('complemento', models.CharField(max_length=150, null=True)),
                ('cep', models.CharField(max_length=20)),
                ('cnae', models.CharField(max_length=20)),
            ],
            options={
                'verbose_name': 'Empresa',
                'verbose_name_plural': 'Empresas',
            },
        ),
        migrations.CreateModel(
            name='Equipamento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=50, verbose_name='Código')),
                ('descricao', models.CharField(max_length=150, verbose_name='Descrição')),
                ('tipo', models.IntegerField(choices=[(0, 0), (1, 1), (None, None)], verbose_name='Tipo')),
                ('hierarquia_protecao_coletiva', models.CharField(max_length=150, verbose_name='Hierarquia de proteção coletiva')),
                ('prazo_validade', models.DateTimeField(verbose_name='Prazo de validade')),
                ('certificado_aprovacao', models.CharField(max_length=100, verbose_name='Certificado de aprovação')),
                ('url_foto', models.CharField(max_length=1000, verbose_name='Foto')),
                ('comentario', models.CharField(max_length=500, null=True, verbose_name='Comentário')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='seguranca_trabalho.empresa', verbose_name='Empresa')),
            ],
        ),
        migrations.CreateModel(
            name='FatorAcidente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=10)),
                ('descricao', models.CharField(max_length=500, null=True)),
            ],
            options={
                'verbose_name': 'Fator acidente',
                'verbose_name_plural': 'Fatores acidente',
            },
        ),
        migrations.CreateModel(
            name='FatorRisco',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=20)),
                ('descricao', models.CharField(max_length=2000)),
                ('categoria', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Fator de risco',
                'verbose_name_plural': 'Fatores de risco',
            },
        ),
        migrations.CreateModel(
            name='Funcionario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_erp', models.CharField(help_text='Código cadastrado nos sistemas de informação da empresa', max_length=100, verbose_name='Código ERP')),
                ('codigo_esocial', models.CharField(help_text='Código no E-SOCIAL', max_length=100, verbose_name='Código no E-SOCIAL')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
                ('genero', models.IntegerField(choices=[(0, 0), (1, 1), (None, None)], verbose_name='Gênero')),
                ('cpf', models.CharField(max_length=13, verbose_name='CPF')),
                ('rg', models.CharField(max_length=15, verbose_name='RG')),
                ('nis', models.CharField(max_length=20, null=True, verbose_name='NIS')),
                ('pis', models.CharField(max_length=20, null=True, verbose_name='PIS')),
                ('pasep', models.CharField(max_length=20, null=True, verbose_name='PASEP')),
                ('nit', models.CharField(max_length=20, null=True, verbose_name='NIT')),
                ('data_nascimento', models.DateField(verbose_name='Data de nascimento')),
                ('estagiario', models.BooleanField(default=False)),
                ('data_exame_admissional', models.DateTimeField(verbose_name='Data do exame admissional')),
                ('data_exame_demissional', models.DateTimeField(help_text='Campo não obrigatório para funcionário ativo', null=True, verbose_name='Data do exame demissional')),
                ('setor', models.CharField(max_length=50, verbose_name='Setor')),
                ('cargo', models.CharField(max_length=50, verbose_name='Cargo')),
                ('funcao', models.CharField(max_length=50, verbose_name='Função')),
                ('url_imagem', models.CharField(max_length=1000, verbose_name='URL da imagem')),
                ('cbo', models.ForeignKey(help_text='Classificação brasileira de ocupação', null=True, on_delete=django.db.models.deletion.PROTECT, to='seguranca_trabalho.classificacaobrasileiraocupacao', verbose_name='CBO')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='seguranca_trabalho.empresa')),
            ],
            options={
                'verbose_name': 'Funcionário',
                'verbose_name_plural': 'Funcionários',
            },
        ),
        migrations.CreateModel(
            name='MedicoASO',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpf', models.CharField(max_length=13)),
                ('nit', models.CharField(max_length=30)),
                ('nome', models.CharField(max_length=150)),
                ('numero_inscricao', models.CharField(max_length=20)),
                ('uf', models.CharField(max_length=10)),
            ],
            options={
                'verbose_name': 'Médico ASO',
                'verbose_name_plural': 'Médicos ASO',
            },
        ),
        migrations.CreateModel(
            name='NaturezaLesao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=15, null=True)),
                ('descricao', models.CharField(max_length=750, null=True)),
            ],
            options={
                'verbose_name': 'Natureza lesão',
                'verbose_name_plural': 'Naturezas lesões',
            },
        ),
        migrations.CreateModel(
            name='ParteCorpoAtingida',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=15, null=True)),
                ('descricao', models.CharField(max_length=500, null=True)),
            ],
            options={
                'verbose_name': 'Parte corpo atingida',
                'verbose_name_plural': 'Partes corpo atingida',
            },
        ),
        migrations.CreateModel(
            name='Procedimento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=30)),
                ('nome', models.CharField(max_length=250)),
            ],
            options={
                'verbose_name': 'Procedimento',
                'verbose_name_plural': 'Procedimentos',
            },
        ),
        migrations.CreateModel(
            name='ResponsavelRegistroAmbiental',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpf', models.CharField(max_length=13)),
                ('nis', models.CharField(max_length=20, null=True)),
                ('nome', models.CharField(max_length=150)),
                ('orgao_classe', models.IntegerField(choices=[(1, 1), (2, 2), (9, 9)])),
                ('sigla_orgao', models.CharField(max_length=20, null=True)),
                ('numero_inscricao', models.CharField(max_length=30)),
                ('uf', models.CharField(max_length=20)),
            ],
            options={
                'verbose_name': 'Responsável pelo registro ambiental',
                'verbose_name_plural': 'Responsáveis pelo registro ambiental',
            },
        ),
        migrations.CreateModel(
            name='TipoAcidente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=10)),
                ('descricao', models.CharField(max_length=500, null=True)),
            ],
            options={
                'verbose_name': 'Tipo de acidente',
                'verbose_name_plural': 'Tipos de acidentes',
            },
        ),
        migrations.CreateModel(
            name='UnidadeMedida',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=20)),
                ('descricao', models.CharField(max_length=2000)),
            ],
            options={
                'verbose_name': 'Unidade de medida',
                'verbose_name_plural': 'Unidades de medida',
            },
        ),
        migrations.CreateModel(
            name='MonitoramentoSaudeTrabalhador',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estagiario', models.BooleanField(default=False)),
                ('tipo_exame', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (9, 9)])),
                ('data_aso', models.DateTimeField()),
                ('resultado_aso', models.IntegerField(choices=[(1, 1), (2, 2)])),
                ('data_exame', models.DateTimeField()),
                ('observacao_procedimento', models.CharField(max_length=1000, null=True)),
                ('ordem_exame', models.IntegerField(choices=[(1, 1), (2, 2)])),
                ('indicacao_resultado', models.IntegerField()),
                ('coordenador_cpf', models.CharField(max_length=13)),
                ('coordenador_crm', models.CharField(max_length=20)),
                ('coordenador_uf', models.CharField(max_length=20)),
                ('coordenador_nome', models.CharField(max_length=150)),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='seguranca_trabalho.empresa')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='seguranca_trabalho.funcionario')),
                ('medicos', models.ManyToManyField(to='seguranca_trabalho.MedicoASO')),
                ('procedimento', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='seguranca_trabalho.procedimento')),
            ],
            options={
                'verbose_name': 'Monitoramento de saúde do trabalhador',
                'verbose_name_plural': 'Monitoramento de saúde do trabalhador',
            },
        ),
        migrations.CreateModel(
            name='FuncionarioEquipamento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantidade', models.IntegerField(verbose_name='Quantidade')),
                ('data_entrega', models.DateTimeField(verbose_name='Data de entrega')),
                ('devolucao', models.BooleanField(default=False, verbose_name='Devolução')),
                ('data_devolucao', models.DateTimeField(default=datetime.datetime.utcnow, null=True, verbose_name='Data de devolução')),
                ('data_vencimento', models.DateTimeField(default=datetime.datetime.utcnow, verbose_name='Data de vencimento')),
                ('comentario', models.CharField(max_length=500, null=True, verbose_name='Comentário')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='seguranca_trabalho.empresa', verbose_name='Empresa')),
                ('equipamento', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='seguranca_trabalho.equipamento', verbose_name='Equipamento')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='seguranca_trabalho.funcionario', verbose_name='Funcionário')),
            ],
        ),
        migrations.CreateModel(
            name='CondicaoFatorRisco',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_inicio', models.DateTimeField()),
                ('descricao_atividade_ambiente', models.CharField(max_length=1000, null=True)),
                ('tipo_avaliacao', models.IntegerField(choices=[(1, 1), (2, 2)])),
                ('intensidade', models.IntegerField()),
                ('limite_tolerancia', models.IntegerField(null=True)),
                ('tecnica_utilizada', models.CharField(max_length=1000)),
                ('insalubridade', models.BooleanField(default=False)),
                ('periculosidade', models.BooleanField(default=False)),
                ('aposentadoria_especial', models.BooleanField(default=False)),
                ('utilizacao_epc', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2)])),
                ('epc_eficaz', models.BooleanField(default=False)),
                ('utilizacao_epi', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2)])),
                ('metodologia_riscos_ergonomicos', models.CharField(max_length=1000, null=True)),
                ('observacao', models.CharField(max_length=1000)),
                ('analises_epi', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='condicao_fator_risco', to='seguranca_trabalho.analiseepi')),
                ('atividades', models.ManyToManyField(to='seguranca_trabalho.Atividade')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='seguranca_trabalho.empresa')),
                ('fator_risco', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='seguranca_trabalho.fatorrisco')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='seguranca_trabalho.funcionario')),
                ('responsaveis_registro_ambiental', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='condicao_fator_risco', to='seguranca_trabalho.responsavelregistroambiental')),
                ('unidade_medida', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='seguranca_trabalho.unidademedida')),
            ],
            options={
                'verbose_name': 'Condição de fator risco',
                'verbose_name_plural': 'Condições de fator risco',
            },
        ),
        migrations.CreateModel(
            name='ComunicacaoAcidenteTrabalho',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acidente_data_hora', models.DateTimeField(verbose_name='Data hora do acidente')),
                ('tipo_cat', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3)], null=True, verbose_name='Tipo da CAT')),
                ('acidente_horas_trabalhadas', models.IntegerField(verbose_name='Horas trabalhadas até o momento do acidente')),
                ('acidente_obito', models.BooleanField(default=False, verbose_name='Acidente com óbito')),
                ('acidente_data_obito', models.DateTimeField(null=True, verbose_name='Data hora do óbito')),
                ('acidente_notificacao_policial', models.BooleanField(default=False, verbose_name='Notificação policial')),
                ('acidente_aviso_comunicacao', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3)], verbose_name='Comunicação do acidente')),
                ('observacao', models.CharField(max_length=1000, null=True, verbose_name='Observação')),
                ('tipo_localizacao_acidente', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (9, 9)], verbose_name='Tipo do local do acidente')),
                ('localizacao_acidente_especificacao', models.CharField(max_length=1000, verbose_name='Especificação do local do acidente')),
                ('acidente_tipo_endereco', models.CharField(max_length=30, verbose_name='Tipo do endereço')),
                ('acidente_endereco_descricao', models.CharField(max_length=1000, verbose_name='Endereço')),
                ('acidente_endereco_numero', models.IntegerField(verbose_name='Número')),
                ('acidente_endereco_complemento', models.CharField(max_length=500, verbose_name='Complemento')),
                ('acidente_endereco_bairro', models.CharField(max_length=500, verbose_name='Bairro')),
                ('acidente_endereco_cep', models.CharField(max_length=100, verbose_name='CEP')),
                ('acidente_endereco_cidade', models.CharField(max_length=200, verbose_name='Cidade')),
                ('acidente_endereco_estado', models.CharField(max_length=200, verbose_name='UF')),
                ('acidente_endereco_pais', models.CharField(max_length=100, verbose_name='País')),
                ('acidente_endereco_codigo_postal', models.CharField(max_length=100, verbose_name='Código postal')),
                ('tipo_inscricao', models.IntegerField(choices=[(1, 1), (2, 2), (4, 4)], verbose_name='Tipo de inscrição')),
                ('inscricao_numero', models.CharField(max_length=100, verbose_name='Número da inscrição')),
                ('lado_parte_corpo_atingida', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3)], verbose_name='Lado do corpo atingida')),
                ('atestado_medico_codigo', models.CharField(max_length=100, verbose_name='Código do atestado médico')),
                ('atestado_medico_data', models.DateTimeField(verbose_name='Data do atestado médico')),
                ('hospital', models.BooleanField(default=False, verbose_name='Hospitalização')),
                ('tempo_hospital', models.IntegerField(null=True, verbose_name='Tempo de hospitalização')),
                ('afastamento_medico', models.BooleanField(default=False, verbose_name='Afastamento médico')),
                ('lesao_complemento_descricao', models.CharField(max_length=2000, verbose_name='Descrição complementar da lesão')),
                ('diagnostico', models.CharField(max_length=2000, verbose_name='Provável diagnóstico médico')),
                ('cid_codigo', models.CharField(max_length=50, verbose_name='Código CID')),
                ('atestado_medico_observacao', models.CharField(max_length=2000, null=True, verbose_name='Observação médica')),
                ('nome_medico', models.CharField(max_length=150, verbose_name='Nome do profissional da saúde')),
                ('natureza_lesao_classificao', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3)], verbose_name='Órgão de classe')),
                ('classificao_codigo_medico', models.CharField(max_length=150, verbose_name='Número de inscrição')),
                ('uf_medico', models.CharField(max_length=100, verbose_name='UF')),
                ('codigo_cat', models.CharField(max_length=100, null=True)),
                ('e_social_notificado', models.BooleanField(default=False)),
                ('agentes_causadores', models.ManyToManyField(to='seguranca_trabalho.AgenteCausadorAcidenteTrabalho', verbose_name='Agentes causadores do acidente de trabalho')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='seguranca_trabalho.empresa', verbose_name='Empresa')),
                ('fator_acidente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='seguranca_trabalho.fatoracidente', verbose_name='Fator do acidente')),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='seguranca_trabalho.funcionario', verbose_name='Funcionário')),
                ('natureza_lesao', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='seguranca_trabalho.naturezalesao', verbose_name='Natureza da lesão')),
                ('parte_corpo_atingida', models.ManyToManyField(to='seguranca_trabalho.ParteCorpoAtingida', verbose_name='Parte do corpo atingida')),
                ('tipo_acidente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='seguranca_trabalho.tipoacidente', verbose_name='Tipo do acidente')),
            ],
            options={
                'verbose_name': 'Comunicação de acidente do trabalho',
                'verbose_name_plural': 'Comunicações de acidente do trabalho',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(default='default username', error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=30, unique=True, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid username. This value may contain only letters, numbers and @/./+/-/_ characters.', 'invalid')], verbose_name='username')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('nome_completo', models.CharField(max_length=150, null=True, verbose_name='Nome completo')),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('empresa_selecionada', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='seguranca_trabalho.empresa')),
                ('empresas', models.ManyToManyField(blank=True, related_name='empresa_set', related_query_name='empresas', to='seguranca_trabalho.Empresa', verbose_name='Empresas')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
            },
        ),
    ]
